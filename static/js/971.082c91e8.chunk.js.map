{"version":3,"file":"static/js/971.082c91e8.chunk.js","mappings":"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","sources":["components/Filter/Filter.jsx","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.jsx","components/ContactForm/ContactForm.jsx","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["import { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/slice/FilterSlice';\nimport { Stack, Input, Text } from '@chakra-ui/react';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filterValue = useSelector(state => state.filter);\n\n  const onFilterChange = event => {\n    dispatch(setFilter(event.currentTarget.value.toLowerCase()));\n  };\n\n  return (\n    <Stack\n      w=\"400px\"\n        mx=\"auto\"\n        spacing={4}\n        border= '1px solid black'\n        borderRadius='8px'\n        display='flex'\n        p='20px'\n        mb='30px'>\n      <Text\n      fontSize={28}\n        color=\"white\"\n        textShadow='#000 1px 0 0px, #000 0 1px 0px, #000 -1px 0 0px, #000 0 -1px 0px'\n        filter='drop-shadow(3px 3px 2px #000)'\n      >\n        Find contacts by name\n      </Text>\n      <Input\n        onChange={onFilterChange}\n        value={filterValue}\n        type=\"text\"\n        name=\"filter\"\n        placeholder='Enter name'\n        bg='gray.40'\n      />\n    </Stack>\n  );\n};\n\nexport default Filter;","import { useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { useDeleteContactsMutation } from 'redux/api/ContactsApi';\n\nimport { toast } from 'react-toastify';\nimport { Flex, Box, Text, Button } from '@chakra-ui/react';\n\nconst ContactListItem = ({ name, number, id }) => {\n  const [deleteContacts, { isLoading: isDeleting, isSuccess, error }] =\n    useDeleteContactsMutation();\n\n  useEffect(() => {\n    isSuccess && toast.info(` ${name} was removed from the phone book`);\n    error && toast.error('oops something went wrong');\n  }, [isSuccess, name, error]);\n\n  return (\n    <Box key={id} _odd={{ bg: \"#edebeb\" }} _even={{ bg: \"#d9d4d4\" }} fontWeight=\"bold\" fontSize='18px'>\n      <Flex\n        alignItems=\"center\"\n        justifyContent=\"space-between\"\n        w=\"400px\"\n        p=\"5px\"\n        >\n        <Text w=\"45%\" p=\"5px\">{name}</Text>\n        <Text w=\"30%\" p=\"5px\">{number}</Text>\n        <Button\n          type=\"button\"\n          onClick={() => deleteContacts(id)}\n          disabled={isDeleting}\n          p=\"5px\"\n          br=\"8px\"\n          fontWeight=\"bold\"\n          border='1px' borderColor='black'\n          cursor=\"pointer\"\n          _hover={{\n          transform:\"scale(1.02)\",\n          color: \"red\",\n          fontWeight: \"bold\"}}\n        >\n          {isDeleting ? 'Delete...' : 'Delete'}\n        </Button>\n      </Flex>\n    </Box>\n  );\n};\n\nContactListItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n};\n\nexport default ContactListItem;","import { useSelector } from 'react-redux';\nimport { useGetContactQuery } from 'redux/api/ContactsApi';\nimport ContactListItem from 'components/ContactListItem';\n\nimport { Spinner } from '@chakra-ui/react';\n\nconst ContactList = () => {\n  const { data, isFetching } = useGetContactQuery();\n  const filter = useSelector(state => state.filter);\n\n  const contacts =\n    data && data.filter(contact => contact.name.toLowerCase().includes(filter));\n\n  return (\n    <>\n      {data && data.length !== 0 && (\n        <ul>\n          {contacts.length !== 0 ? (\n            contacts\n              .sort((a, b) => a.name.localeCompare(b.name))\n              .map(contact => (\n              <ContactListItem key={contact.id} {...contact} />\n            ))\n          ) : (\n            <p>no search contacts: {filter}</p>\n          )}\n        </ul>\n      )}\n      {data && data.length === 0 && <p>'You have no contacts'</p>}\n      {isFetching && (\n        <Spinner\n          thickness=\"4px\"\n          speed=\"0.65s\"\n          emptyColor=\"gray.200\"\n          color=\"blue.500\"\n          size=\"xl\"\n        />\n      )}\n    </>\n  );\n};\n\nexport default ContactList;","import { useState, useEffect } from 'react';\n\nimport {\n  useAddContactsMutation,\n  useGetContactQuery,\n} from 'redux/api/ContactsApi';\n\nimport { toast } from 'react-toastify';\nimport { Stack, Input, Button, Text } from '@chakra-ui/react';\n\nconst ContactForm = () => {\n  const [addContacts, { isLoading, isSuccess, error }] =\n    useAddContactsMutation();\n  const { data } = useGetContactQuery();\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const [nameForToast, setnameForToast] = useState('');\n\n  useEffect(() => {\n    isSuccess &&\n      toast.success(` ${nameForToast} added to contact book`, {\n        autoClose: 800,\n      });\n    error && toast.error('oops something went wrong');\n  }, [error, isSuccess, nameForToast]);\n\n  const handleInputChange = ({ currentTarget: { name, value } }) => {\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    setnameForToast(name);\n    data.every(item => item.name.toLowerCase() !== name.toLowerCase())\n      ? addContacts({\n          name: name,\n          number: number,\n        })\n      : toast.error(`${name} is alredy in contacts!!!`);\n    // setName('');\n    // setNumber('');\n  };\n\n  return (\n    <form autoComplete=\"off\" onSubmit={handleSubmit}>\n      <Stack\n        w=\"400px\"\n        mx=\"auto\"\n        spacing={4}\n        border= '1px solid black'\n        borderRadius='8px'\n        display='flex'\n        p='20px'\n        mb='30px'\n      >\n        <Text\n          fontSize={28}\n          color=\"white\"\n          textShadow='#000 1px 0 0px, #000 0 1px 0px, #000 -1px 0 0px, #000 0 -1px 0px'\n          filter='drop-shadow(3px 3px 2px #000)'\n        >\n          Name\n        </Text>\n\n        <Input\n          onChange={handleInputChange}\n          value={name}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          placeholder='Boris Jonsoniuk'\n          bg='gray.40'\n        />\n\n        <Text\n          fontSize={28}\n          color=\"white\"\n          textShadow='#000 1px 0 0px, #000 0 1px 0px, #000 -1px 0 0px, #000 0 -1px 0px'\n          filter='drop-shadow(3px 3px 2px #000)'\n        >\n          Number\n        </Text>\n        <Input\n          onChange={handleInputChange}\n          value={number}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          placeholder=\"+38 050 777 77 77\"\n          bg='gray.40'\n        />\n        <Button\n          colorScheme=\"gray\"\n          type=\"submit\"\n          disabled={number && name ? false : true}\n        >\n          {isLoading ? 'Add Contact...Spiner' : 'Add Contact'}\n        </Button>\n      </Stack>\n    </form>\n  );\n};\n\nexport default ContactForm;","import React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n\nimport { getLoggedin } from 'redux/slice/AuthSlise';\nimport Filter from 'components/Filter';\nimport ContactList from 'components/ContactList';\nimport ContactForm from 'components/ContactForm';\n\nimport { Heading, Box, Flex } from '@chakra-ui/react';\nimport Image from 'images/phoneBook.jpg';\n\nconst ContactsView = () => {\n  const isLogdedin = useSelector(getLoggedin);\n  return (\n    <Box pb={5}\n      w={'full'}\n      backgroundImage={`url(${Image})`}\n      backgroundSize={'cover'}\n      backgroundPosition={'center -120px'}\n    >\n      <Flex\n        w=\"400px\"\n        mx=\"auto\"\n        my=\"6\"\n        flexDirection={'column'}\n      >\n        {!isLogdedin && <Navigate to=\"/\" replace={true} />}\n        <Heading\n          mb={10}\n          color=\"white\"\n          textShadow='#000 1px 0 0px, #000 0 1px 0px, #000 -1px 0 0px, #000 0 -1px 0px'\n          filter= 'drop-shadow(3px 3px 2px #000)'\n        >\n          Phonebook\n        </Heading>\n        <ContactForm />\n        <Heading\n          mb={10}\n          color=\"white\"\n          textShadow='#000 1px 0 0px, #000 0 1px 0px, #000 -1px 0 0px, #000 0 -1px 0px'\n          filter='drop-shadow(3px 3px 2px #000)'\n        >\n          Contacts\n        </Heading>\n        <Filter />\n        <ContactList />\n      </Flex>  \n    </Box>\n  );\n};\n\nexport default ContactsView;"],"names":["dispatch","useDispatch","filterValue","useSelector","state","filter","w","mx","spacing","border","borderRadius","display","p","mb","fontSize","color","textShadow","onChange","event","setFilter","currentTarget","value","toLowerCase","type","name","placeholder","bg","number","id","useDeleteContactsMutation","deleteContacts","isDeleting","isLoading","isSuccess","error","useEffect","toast","_odd","_even","fontWeight","alignItems","justifyContent","onClick","disabled","br","borderColor","cursor","_hover","transform","useGetContactQuery","data","isFetching","contacts","contact","includes","length","sort","a","b","localeCompare","map","thickness","speed","emptyColor","size","useAddContactsMutation","addContacts","useState","setName","setNumber","nameForToast","setnameForToast","autoClose","handleInputChange","autoComplete","onSubmit","preventDefault","every","item","pattern","title","required","colorScheme","isLogdedin","getLoggedin","pb","backgroundImage","Image","backgroundSize","backgroundPosition","my","flexDirection","to","replace"],"sourceRoot":""}